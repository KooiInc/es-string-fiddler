var D=JSON.parse('{"html":["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","contenteditable","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","target","title","translate","type","usemap","valign","value","width","xmlns","slot"],"svg":["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"],"tags":{"a":true,"area":true,"audio":false,"br":true,"base":true,"body":true,"button":true,"canvas":true,"dl":true,"data":true,"datalist":true,"div":true,"em":true,"embed":false,"fieldset":true,"font":true,"footer":true,"form":false,"hr":true,"head":true,"header":true,"output":true,"iframe":false,"frameset":false,"img":true,"input":true,"li":true,"label":true,"legend":true,"link":true,"map":true,"mark":true,"menu":true,"media":true,"meta":true,"nav":true,"meter":true,"ol":true,"object":false,"optgroup":true,"option":true,"p":true,"param":true,"picture":true,"pre":true,"progress":false,"quote":true,"script":false,"select":true,"source":true,"span":true,"style":true,"caption":true,"td":true,"col":true,"table":true,"tr":true,"template":false,"textarea":true,"time":true,"title":true,"track":true,"details":true,"ul":true,"video":true,"del":true,"ins":true,"slot":true,"blockquote":true,"svg":true,"dialog":true,"summary":true,"main":true,"address":true,"colgroup":true,"tbody":true,"tfoot":true,"thead":true,"th":true,"dd":true,"dt":true,"figcaption":true,"figure":true,"i":true,"b":true,"code":true,"h1":true,"h2":true,"h3":true,"h4":true,"abbr":true,"bdo":true,"dfn":true,"kbd":true,"q":true,"rb":true,"rp":true,"rt":true,"ruby":true,"s":true,"strike":true,"samp":true,"small":true,"strong":true,"sup":true,"sub":true,"u":true,"var":true,"wbr":true,"nobr":true,"tt":true,"noscript":true}}');var P=B();function B(){let{html:C,svg:M,tags:L}=D,O=(p,m)=>p.find(l=>l===m),S={data:/data-[\-\w.\p{L}]/ui,validURL:/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i,whiteSpace:/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g,notAllowedValues:/javascript|injected|noreferrer|alert|DataURL/gi},E=p=>{let m=p?.nodeName.toLowerCase()||"none";return m.startsWith("#")||!!L[m]};return w;function w(p){let m={rawHTML:p.outerHTML,removed:{}};return p instanceof HTMLElement&&[...p.childNodes].forEach(l=>{if(l?.children?.length&&w(l),l?.attributes){let $=l instanceof SVGElement?M:C;[...l.attributes].forEach(j=>{let[b,z]=[j.name.trim().toLowerCase(),j.value.trim().toLowerCase().replace(S.whiteSpace,"")],R=b==="href"?!S.validURL.test(z):S.notAllowedValues.test(z),H=b.startsWith("data")?!S.data.test(b):!O($,b);(R||H)&&(m.removed[`${j.name}`]=`attribute/property(-value) not allowed, removed. Value: ${j.value||"none"}`,l.removeAttribute(j.name))})}if(!E(l)){let $=(l?.outerHTML||l?.textContent).trim()||"EMPTY";m.removed[`<${l.nodeName?.toLowerCase()}>`]=`not allowed, not rendered. Value: ${$}`,l.remove()}}),Object.keys(m.removed).length&&Object.entries(m.removed).forEach(([l,$])=>console.info(`\u2718 ${l}: ${$}`)),p}}var{randomString:_,uuid4:V}=J();function J(){let C=z(),M=()=>C?[...crypto.getRandomValues(new Uint32Array(1))].shift()/2**32:Math.random(),L=({min:n=0,max:s=Number.MAX_SAFE_INTEGER}={})=>Math.floor(M()*(s-n+1)+n),O=(n=0,s=10,i)=>(i||[])instanceof Function?[...Array(s)].map((y,v)=>n+v).map(i):[...Array(s)].map((y,v)=>n+v),S=n=>String.fromCharCode(n),E="!?@#$%^&*=+_;-".split(""),w=RegExp(`[${E.map(n=>`\\${n}`).join("")}]`,"g");console.log(w);let p=n=>{let s=n.length;for(;s--;){let i=L({max:s});[n[s],n[i]]=[n[i],n[s]]}return n},m=p(O(65,26,S)),l=p(O(97,26,S)),j={UCLC:p(m.concat(l)),UC:m,LC:l,Nrs:p(O()),Sym:p(E)},b=n=>Object.entries(n).reduce((s,[i,y])=>y?[...s,...j[i]]:s,l);function z(){try{return window&&"crypto"in window}catch{return!1}}function R(){return C&&crypto.randomUUID?crypto.randomUUID():[...new Uint8Array(16)].map(n=>L({max:255})).map((n,s)=>`${(s===8?n&63|128:s===6?n&15|64:n).toString(16).padStart(2,"0")}${~[3,5,7,9].indexOf(s)?"-":""}`).join("")}function H(n,s,i){return/[a-z]/i.test(n)&&(s&&i?/\d/.test(n)&&w.test(n):s?/\d/.test(n):i?w.test(n):!0)}function F(n,s){if(s){let i=[...n],y=i.findIndex(v=>/[a-z]/i.test(v));[i[0],i[y]]=[i[y],i[0]],n=i.join("")}return n}function N({len:n=12,includeUppercase:s=!0,includeNumbers:i=!1,includeSymbols:y=!1,startAlphabetic:v=!1}={}){n=n<6?6:n;let f=p(b({UC:s,Nrs:i,Sym:y}));for(;f.length<n;)f=[...f,...p(f)];let T;for(let k=0;k<f.length;k+=n)if(T=f.slice(k,k+n).join(""),H(T,i,y))return F(T,v&&!/^[a-z]/i.test(T));return N({len:n,includeUppercase:s,includeNumbers:i,includeSymbols:y,startAlphabetic:v})}return{randomString:N,uuid4:R}}var Y=P,Z=I,ie=Z({sanitize:!1,sanitizer:null}),se=I();function I({sanitize:C=!0,silentFail:M=!1,sanitizer:L=Y}={}){let O=["concat","padEnd","padStart","repeat","replace","replaceAll","slice","toLocaleLowerCase","toLocaleUpperCase","toLowerCase","toUpperCase","toWellFormed","trim","trimEnd","trimLeft","trimRight","trimStart","substring"].reduce((e,t)=>({...e,[t]:r=>(...a)=>(a.length&&a[0].raw&&(a=[k(a[0],a.slice(1))]),o(r[t](...a)))}),{}),S=K(),E=e=>(...t)=>o`${S(e,...t)}`,w=([e,...t])=>`${e.toUpperCase()}${t.join("")}`,p=e=>e.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`).replace(/^-|-$/,""),m=e=>e.split(" ").map(t=>t.replace(/[a-z]/i,r=>w(r))).join(" "),l=e=>e.toLowerCase().trim().split(/[- ]/).map((t,r)=>r&&`${w(t)}`||t).join(""),$=e=>({at:t,html:r=!1,wordBoundary:a=!1}={})=>{if(e.length<=t)return o(e);let u=e.slice(0,t-1),g=r?" &hellip;":" ...";return o((a?u.slice(0,u.lastIndexOf(" ")):u)+g)},j=e=>t=>o(t?e.trim().replace(/\n/g,"#!#").replace(/\s{2,}/g," ").replace(/#!#/g,`
`):e.trim().replace(/\s{2,}/g," ")),b=e=>o(e.replace(/</g,"&lt;")),z=(e,t=!1)=>{let r=L(Object.assign(document.createElement("div"),{innerHTML:e}));return r.innerHTML.trim().length?t?r.innerHTML:o(r.innerHTML):t?`Sanitatition failed (likely unsafe html) for '${$(b(e))({at:40})}'`:o(e)},R=e=>(t,r)=>{if(!t)return o(string);let a=r?.dontSanitize??!0;delete r?.dontSanitize;let u=r&&Object.entries(r).reduce((d,[h,x])=>[...d,`${h}="${x}"`],[]).join(" ")||"",g=`<${t} ${u}>${e}</${t}>`;if(!C||!a)return o(g);let U=L(Object.assign(document.createElement("div"),{innerHTML:g}));if(U.innerHTML.trim().length)return o(U.innerHTML);let c=$(`<${t} ${u}>${e}</${t}>`)({at:40,html:!0});return M?o(b(e)):o`${b(c)} is not valid (see console)`},H=e=>(t,r)=>{if([t,r].filter(u=>Object.getPrototypeOf(u??-1)?.constructor===String).length===2){let u=RegExp(t,"g");return o(e.replace(u,r))}return o(e)},F=e=>({terms:t=[],caseSensitive:r=!1}={})=>{let a=t.constructor===RegExp;t=t&&!a&&!Array.isArray(t)?[t]:t;let u=!a&&!t.find(x=>x.constructor!==String);if(!a&&(!u||!t.length))return{hits:"n/a",result:"please provide valid search terms"};let g=a&&`${t.flags??""}`||(r?"i":""),U=RegExp(a?t:t.join("|"),`g${g}`),c=[...e.matchAll(U)],d=c.length,h=d>0;return c=h?c.reduce((x,A)=>({...x,[A[0]]:{at:(x[A[0]]?.at||[]).concat(A.index)}}),{}):{},{searched4:a?t.toString():t.join(", "),foundAny:h,hits:d,result:c}},N=e=>o(e.replace(/[\n\r]/g,"").replace(/\s{2,}/g," ").replace(/(>\s+<)/g,"><").replace(/>\s+(\w)/g,(t,r)=>`>${r}`).replace(/(\w)\s+</g,(t,r)=>`${r}<`).replace(/ +>/g,">").replace(/^\s+|\s+$/,"")),n=e=>(t,r=0)=>o(`${e.slice(0,(r>0,r))}${t}${e.slice(r)}`),s=e=>t=>o(`${e}${t}`),i=e=>({get lower(){return o(e.toLowerCase())},get upper(){return o(e.toUpperCase())},get camel(){return o`${l(e)}`},get wordsFirstUC(){return o`${m(e)}`},get dashed(){return o`${p(e)}`},get firstUC(){return o(w(e))}}),y=e=>({get single(){return o(`'${e}'`)},get double(){return o(`"${e}"`)},get backtick(){return o(`\`${e}\``)}}),v=(e,...t)=>{try{return X(e,...t)}catch(r){return`Error creating Regular Expression from "${e}" (modifiers: ${t.join("").trim()||"none"})
${r.message}`}},f={...W({isProxied:!0,wordsFirstUC:e=>i(e).wordsFirstUC,toCamelCase:e=>i(e).camel,toDashedNotation:e=>i(e).dashed,ucFirst:e=>i(e).firstUC,lower:e=>i(e).lower,upper:e=>i(e).upper,value:e=>`${e}`,append:s,insert:n,case:i,quote:y,format:E,toTag:R,truncate:$,replaceWords:H,escHTML:b,compressHTML:N,trimAll:j,find:F}),...O},T={get(e,t){if(f[t]&&!/object|tostring|valueof/i.test(t))return f[t]instanceof Function?f[t](e):f[t];if(e[t])return e[t]instanceof Function?e[t].bind(e):e[t]},has(e,t){return t in f||t in e},ownKeys(e){return[...Reflect.ownKeys(f),...Reflect.ownKeys(e)]},getOwnPropertyDescriptor(e,t){return Object.getOwnPropertyDescriptor(f,t)??Object.getOwnPropertyDescriptor(e,t)}};function k(e,...t){return new String(Array.isArray(e)&&t.length?e.reduce((r,a,u)=>r?.concat(`${a}${t[u]??""}`)||r,""):e)}function q(e,t,r=!1){f[e]=a=>r?(...u)=>o(t(a,...u)):o(t(a))}Object.entries(Object.getOwnPropertyDescriptors({extendWith:q,regExp:v,randomString:G,get currentMethods(){return Object.getOwnPropertyNames(f).sort((e,t)=>e.localeCompare(t))},get uuid4(){return o(V())},set sanitize(e){C=e}})).forEach(([e,t])=>{Object.defineProperty(o,e,t)});function o(e,...t){let r=k(e,...t);return r=C&&L&&/<.+?>/gi.test(r)&&!r?.trim()?.startsWith("!!!")?z(r,!0):r.replace(/!!!/,""),new Proxy(new String(r),T)}return o;function W(e){let t=(u,...g)=>o(k(u,...g)),r=()=>(u,...g)=>t(u,...g);return{...{clone:t,cloneTo:r,set:r},...e}}function G(e){return o(_(e))}function X(e,...t){let r=t.length&&Array.isArray(t.slice(-1))?t.pop().join(""):"";return new RegExp((t.length&&e.raw.reduce((a,u,g)=>a.concat(t[g-1]||"").concat(u),"")||e.raw.join("")).split(`
`).map(a=>a.replace(/\s|\/\/.*$/g,"").trim().replace(/(@s!)/g," ")).join(""),r)}function K(){let{isStringOrNumber:e,isObject:t,invalidate:r,replacement:a,replacer:u,replace:g}={isStringOrNumber:c=>[String,Number].find(d=>Object.getPrototypeOf(c??"")?.constructor===d),isObject:c=>Object.getPrototypeOf(c??"")?.constructor===Object,invalidate:(c,d)=>c??`{${d}}`,replacement:(c,d,h)=>!e(d[c])||!h&&`${d[c]}`.trim()===""?r(h,c):d[c]??r(h,c),replacer:(c,d)=>(...h)=>a(h.find(x=>x.key).key??"_",c,d),replace:(c,d,h)=>c.replace(/\{(?<key>[a-z_\d]+)}/gim,u(d,h))},U=(c,d=void 0,...h)=>h.flat().reduce((x,A)=>x.concat(t(A)?g(c,A,d):""),"");return(c,...d)=>U(c,void 0,...d)}}export{Z as $SFactory,ie as $SNoHTML,se as default};
