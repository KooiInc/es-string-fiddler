var R=JSON.parse('{"html":["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","contenteditable","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","target","title","translate","type","usemap","valign","value","width","xmlns","slot"],"svg":["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"],"tags":{"a":true,"area":true,"audio":false,"br":true,"base":true,"body":true,"button":true,"canvas":true,"dl":true,"data":true,"datalist":true,"div":true,"em":true,"embed":false,"fieldset":true,"font":true,"footer":true,"form":false,"hr":true,"head":true,"header":true,"output":true,"iframe":false,"frameset":false,"img":true,"input":true,"li":true,"label":true,"legend":true,"link":true,"map":true,"mark":true,"menu":true,"media":true,"meta":true,"nav":true,"meter":true,"ol":true,"object":false,"optgroup":true,"option":true,"p":true,"param":true,"picture":true,"pre":true,"progress":false,"quote":true,"script":false,"select":true,"source":true,"span":true,"style":true,"caption":true,"td":true,"col":true,"table":true,"tr":true,"template":false,"textarea":true,"time":true,"title":true,"track":true,"details":true,"ul":true,"video":true,"del":true,"ins":true,"slot":true,"blockquote":true,"svg":true,"dialog":true,"summary":true,"main":true,"address":true,"colgroup":true,"tbody":true,"tfoot":true,"thead":true,"th":true,"dd":true,"dt":true,"figcaption":true,"figure":true,"i":true,"b":true,"code":true,"h1":true,"h2":true,"h3":true,"h4":true,"abbr":true,"bdo":true,"dfn":true,"kbd":true,"q":true,"rb":true,"rp":true,"rt":true,"ruby":true,"s":true,"strike":true,"samp":true,"small":true,"strong":true,"sup":true,"sub":true,"u":true,"var":true,"wbr":true,"nobr":true,"tt":true,"noscript":true}}');var H=J();function J(){let{html:O,svg:x,tags:$}=R,A=(f,y)=>f.find(s=>s===y),L={data:/data-[\-\w.\p{L}]/ui,validURL:/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i,whiteSpace:/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g,notAllowedValues:/javascript|injected|noreferrer|alert|DataURL/gi},h=f=>{let y=f?.nodeName.toLowerCase()||"none";return y.startsWith("#")||!!$[y]};return S;function S(f){let y={rawHTML:f.outerHTML,removed:{}};return f instanceof HTMLElement&&[...f.childNodes].forEach(s=>{if(s?.children?.length&&S(s),s?.attributes){let b=s instanceof SVGElement?x:O;[...s.attributes].forEach(j=>{let[w,a]=[j.name.trim().toLowerCase(),j.value.trim().toLowerCase().replace(L.whiteSpace,"")],u=w==="href"?!L.validURL.test(a):L.notAllowedValues.test(a),d=w.startsWith("data")?!L.data.test(w):!A(b,w);(u||d)&&(y.removed[`${j.name}`]=`attribute/property(-value) not allowed, removed. Value: ${j.value||"none"}`,s.removeAttribute(j.name))})}if(!h(s)){let b=(s?.outerHTML||s?.textContent).trim()||"EMPTY";y.removed[`<${s.nodeName?.toLowerCase()}>`]=`not allowed, not rendered. Value: ${b}`,s.remove()}}),Object.keys(y.removed).length&&Object.entries(y.removed).forEach(([s,b])=>console.info(`\u2718 ${s}: ${b}`)),f}}var{randomString:D,uuid4:P}=Y();function Y(){let O=()=>window.crypto?[...crypto.getRandomValues(new Uint32Array(1))].shift()/4294967296:Math.random(),x=({min:a=0,max:u=Number.MAX_SAFE_INTEGER}={})=>Math.floor(O()*(u-a+1)+a),[$,A,L]=[(a=0,u=10,d)=>d&&d instanceof Function?[...Array(u)].map((k,E)=>a+E).map(d):[...Array(u)].map((k,E)=>a+E),a=>String.fromCharCode(a),/[!?@#$%^&*=+_;\-]/g],h=a=>{let u=a.length;for(;u--;){let d=x({max:u});[a[u],a[d]]=[a[d],a[u]]}return a},[S,f]=[h($(65,26,A)),h($(97,26,A))],s={UCLC:h(S.concat(f)),UC:S,LC:f,Nrs:h($()),Sym:h("!@#$%^&+*=-_;?".split(""))},b=a=>Object.entries(a).reduce((u,[d,k])=>k?[...u,...s[d]]:u,f);function j(){return window.crypto?.randomUUID?crypto.randomUUID():[...new Uint8Array(16)].map(a=>x({max:255})).map((a,u)=>`${(u===8?a&63|128:u===6?a&15|64:a).toString(16).padStart(2,"0")}${~[3,5,7,9].indexOf(u)?"-":""}`).join("")}function w({len:a=12,includeUppercase:u=!0,includeNumbers:d=!1,includeSymbols:k=!1,startAlphabetic:E=!1}={}){let U=h(b({UC:u,Nrs:d,Sym:k})),M=h($(1,a-1));do U=[...U,...h(U)];while(U.length<a);let p=U.slice(0,a);return d&&!p.find(N=>!isNaN(parseInt(N)))&&p.splice(M.shift(),1,s.Nrs[x({max:s.Nrs.length})]),k&&!L.test(p.join(""))&&p.splice(M.shift(),1,s.Sym[x({max:s.Sym.length})]),E&&!/^[a-z]/i.test(p[0])&&p.splice(0,1,s.UCLC[x({max:s.UCLC.length})]),`${p.join("")}`}return{randomString:w,uuid4:j}}var Z=H,B=_,ie=B({sanitize:!1,sanitizer:null}),se=_();function _({sanitize:O=!0,silentFail:x=!1,sanitizer:$=Z}={}){let A=["concat","padEnd","padStart","repeat","replace","replaceAll","slice","toLocaleLowerCase","toLocaleUpperCase","toLowerCase","toUpperCase","toWellFormed","trim","trimEnd","trimLeft","trimRight","trimStart","substring"].reduce((e,t)=>({...e,[t]:r=>(...o)=>(o.length&&o[0].raw&&(o=[F(o[0],o.slice(1))]),n(r[t](...o)))}),{}),L=K(),h=e=>(...t)=>n`${L(e,...t)}`,S=([e,...t])=>`${e.toUpperCase()}${t.join("")}`,f=e=>e.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`).replace(/^-|-$/,""),y=e=>e.split(" ").map(t=>t.replace(/[a-z]/i,r=>S(r))).join(" "),s=e=>e.toLowerCase().trim().split(/[- ]/).map((t,r)=>r&&`${S(t)}`||t).join(""),b=e=>({at:t,html:r=!1,wordBoundary:o=!1}={})=>{if(e.length<=t)return n(e);let c=e.slice(0,t-1),m=r?" &hellip;":" ...";return n((o?c.slice(0,c.lastIndexOf(" ")):c)+m)},j=e=>t=>n(t?e.trim().replace(/\n/g,"#!#").replace(/\s{2,}/g," ").replace(/#!#/g,`
`):e.trim().replace(/\s{2,}/g," ")),w=e=>n(e.replace(/</g,"&lt;")),a=(e,t=!1)=>{let r=$(Object.assign(document.createElement("div"),{innerHTML:e}));return r.innerHTML.trim().length?t?r.innerHTML:n(r.innerHTML):t?`Sanitatition failed (likely unsafe html) for '${b(w(e))({at:40})}'`:n(e)},u=e=>(t,r)=>{if(!t)return n(string);let o=r?.dontSanitize??!0;delete r?.dontSanitize;let c=r&&Object.entries(r).reduce((l,[g,v])=>[...l,`${g}="${v}"`],[]).join(" ")||"",m=`<${t} ${c}>${e}</${t}>`;if(!O||!o)return n(m);let T=$(Object.assign(document.createElement("div"),{innerHTML:m}));if(T.innerHTML.trim().length)return n(T.innerHTML);let i=b(`<${t} ${c}>${e}</${t}>`)({at:40,html:!0});return x?n(w(e)):n`${w(i)} is not valid (see console)`},d=e=>(t,r)=>{if([t,r].filter(c=>Object.getPrototypeOf(c??-1)?.constructor===String).length===2){let c=RegExp(t,"g");return n(e.replace(c,r))}return n(e)},k=e=>({terms:t=[],caseSensitive:r=!1}={})=>{let o=t.constructor===RegExp;t=t&&!o&&!Array.isArray(t)?[t]:t;let c=!o&&!t.find(v=>v.constructor!==String);if(!o&&(!c||!t.length))return{hits:"n/a",result:"please provide valid search terms"};let m=o&&`${t.flags??""}`||(r?"i":""),T=RegExp(o?t:t.join("|"),`g${m}`),i=[...e.matchAll(T)],l=i.length,g=l>0;return i=g?i.reduce((v,z)=>({...v,[z[0]]:{at:(v[z[0]]?.at||[]).concat(z.index)}}),{}):{},{searched4:o?t.toString():t.join(", "),foundAny:g,hits:l,result:i}},E=e=>n(e.replace(/[\n\r]/g,"").replace(/\s{2,}/g," ").replace(/(>\s+<)/g,"><").replace(/>\s+(\w)/g,(t,r)=>`>${r}`).replace(/(\w)\s+</g,(t,r)=>`${r}<`).replace(/ +>/g,">").replace(/^\s+|\s+$/,"")),U=e=>(t,r=0)=>n(`${e.slice(0,(r>0,r))}${t}${e.slice(r)}`),M=e=>t=>n(`${e}${t}`),p=e=>({get lower(){return n(e.toLowerCase())},get upper(){return n(e.toUpperCase())},get camel(){return n`${s(e)}`},get wordsFirstUC(){return n`${y(e)}`},get dashed(){return n`${f(e)}`},get firstUC(){return n(S(e))}}),N=e=>({get single(){return n(`'${e}'`)},get double(){return n(`"${e}"`)},get backtick(){return n(`\`${e}\``)}}),V=(e,...t)=>{try{return X(e,...t)}catch(r){return`Error creating Regular Expression from "${e}" (modifiers: ${t.join("").trim()||"none"})
${r.message}`}},C={...W({isProxied:!0,wordsFirstUC:e=>p(e).wordsFirstUC,toCamelCase:e=>p(e).camel,toDashedNotation:e=>p(e).dashed,ucFirst:e=>p(e).firstUC,lower:e=>p(e).lower,upper:e=>p(e).upper,value:e=>`${e}`,append:M,insert:U,case:p,quote:N,format:h,toTag:u,truncate:b,replaceWords:d,escHTML:w,compressHTML:E,trimAll:j,find:k}),...A},I={get(e,t){if(C[t]&&!/object|tostring|valueof/i.test(t))return C[t]instanceof Function?C[t](e):C[t];if(e[t])return e[t]instanceof Function?e[t].bind(e):e[t]},has(e,t){return t in C||t in e},ownKeys(e){return[...Reflect.ownKeys(C),...Reflect.ownKeys(e)]},getOwnPropertyDescriptor(e,t){return Object.getOwnPropertyDescriptor(C,t)??Object.getOwnPropertyDescriptor(e,t)}};function F(e,...t){return new String(Array.isArray(e)&&t.length?e.reduce((r,o,c)=>r?.concat(`${o}${t[c]??""}`)||r,""):e)}function q(e,t,r=!1){C[e]=o=>r?(...c)=>n(t(o,...c)):n(t(o))}Object.entries(Object.getOwnPropertyDescriptors({extendWith:q,regExp:V,randomString:G,get currentMethods(){return Object.getOwnPropertyNames(C).sort((e,t)=>e.localeCompare(t))},get uuid4(){return n(P())},set sanitize(e){O=e}})).forEach(([e,t])=>{Object.defineProperty(n,e,t)});function n(e,...t){let r=F(e,...t);return r=O&&$&&/<.+?>/gi.test(r)&&!r?.trim()?.startsWith("!!!")?a(r,!0):r.replace(/!!!/,""),new Proxy(new String(r),I)}return n;function W(e){let t=(c,...m)=>n(F(c,...m)),r=()=>(c,...m)=>t(c,...m);return{...{clone:t,cloneTo:r,set:r},...e}}function G(e){return n(D(e))}function X(e,...t){let r=t.length&&Array.isArray(t.slice(-1))?t.pop().join(""):"";return new RegExp((t.length&&e.raw.reduce((o,c,m)=>o.concat(t[m-1]||"").concat(c),"")||e.raw.join("")).split(`
`).map(o=>o.replace(/\s|\/\/.*$/g,"").trim().replace(/(@s!)/g," ")).join(""),r)}function K(){let{isStringOrNumber:e,isObject:t,invalidate:r,replacement:o,replacer:c,replace:m}={isStringOrNumber:i=>[String,Number].find(l=>Object.getPrototypeOf(i??"")?.constructor===l),isObject:i=>Object.getPrototypeOf(i??"")?.constructor===Object,invalidate:(i,l)=>i??`{${l}}`,replacement:(i,l,g)=>!e(l[i])||!g&&`${l[i]}`.trim()===""?r(g,i):l[i]??r(g,i),replacer:(i,l)=>(...g)=>o(g.find(v=>v.key).key??"_",i,l),replace:(i,l,g)=>i.replace(/\{(?<key>[a-z_\d]+)}/gim,c(l,g))},T=(i,l=void 0,...g)=>g.flat().reduce((v,z)=>v.concat(t(z)?m(i,z,l):""),"");return(i,...l)=>T(i,void 0,...l)}}export{B as $SFactory,ie as $SNoHTML,se as default};
