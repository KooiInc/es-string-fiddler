var N=JSON.parse('{"html":["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","contenteditable","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","target","title","translate","type","usemap","valign","value","width","xmlns","slot"],"svg":["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"],"tags":{"a":true,"area":true,"audio":false,"br":true,"base":true,"body":true,"button":true,"canvas":true,"dl":true,"data":true,"datalist":true,"div":true,"em":true,"embed":false,"fieldset":true,"font":true,"footer":true,"form":false,"hr":true,"head":true,"header":true,"output":true,"iframe":false,"frameset":false,"img":true,"input":true,"li":true,"label":true,"legend":true,"link":true,"map":true,"mark":true,"menu":true,"media":true,"meta":true,"nav":true,"meter":true,"ol":true,"object":false,"optgroup":true,"option":true,"p":true,"param":true,"picture":true,"pre":true,"progress":false,"quote":true,"script":false,"select":true,"source":true,"span":true,"style":true,"caption":true,"td":true,"col":true,"table":true,"tr":true,"template":false,"textarea":true,"time":true,"title":true,"track":true,"details":true,"ul":true,"video":true,"del":true,"ins":true,"slot":true,"blockquote":true,"svg":true,"dialog":true,"summary":true,"main":true,"address":true,"colgroup":true,"tbody":true,"tfoot":true,"thead":true,"th":true,"dd":true,"dt":true,"figcaption":true,"figure":true,"i":true,"b":true,"code":true,"h1":true,"h2":true,"h3":true,"h4":true,"abbr":true,"bdo":true,"dfn":true,"kbd":true,"q":true,"rb":true,"rp":true,"rt":true,"ruby":true,"s":true,"strike":true,"samp":true,"small":true,"strong":true,"sup":true,"sub":true,"u":true,"var":true,"wbr":true,"nobr":true,"tt":true,"noscript":true}}');var U=_();function _(){let{html:j,svg:T,tags:L}=N,z=(f,p)=>f.find(l=>l===p),y={data:/data-[\-\w.\p{L}]/ui,validURL:/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i,whiteSpace:/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g,notAllowedValues:/javascript|injected|noreferrer|alert|DataURL/gi},E=f=>{let p=f?.nodeName.toLowerCase()||"none";return p.startsWith("#")||!!L[p]};return v;function v(f){let p={rawHTML:f.outerHTML,removed:{}};return f instanceof HTMLElement&&[...f.childNodes].forEach(l=>{if(l?.children?.length&&v(l),l?.attributes){let g=l instanceof SVGElement?T:j;[...(l??{attributes:[]}).attributes].forEach(h=>{let x=h.name.trim().toLowerCase(),S=h.value.trim().toLowerCase().replace(y.whiteSpace,""),O=x==="href"?!y.validURL.test(S):y.notAllowedValues.test(S),C=x.startsWith("data")?!y.data.test(x):!z(g,x);if(O||C){let M=h.value||"none";p.removed[`${h.name}`]=`attribute/property(-value) not allowed, removed. Value: ${M}`,l.removeAttribute(h.name)}})}if(!E(l)){let g=(l?.outerHTML||l?.textContent).trim()||"EMPTY";p.removed[`<${l.nodeName?.toLowerCase()}>`]=`not allowed, not rendered. Value: ${g}`,l.remove()}}),Object.keys(p.removed).length&&Object.entries(p.removed).forEach(([l,w])=>console.info(`\u2718 ${l}: ${w}`)),f}}var X=U,G=R,K=G({sanitize:!1,sanitizer:null}),Q=R();function R({sanitize:j=!0,silentFail:T=!1,sanitizer:L=X}={}){let z=["concat","padEnd","padStart","repeat","replace","replaceAll","slice","toLocaleLowerCase","toLocaleUpperCase","toLowerCase","toUpperCase","toWellFormed","trim","trimEnd","trimLeft","trimRight","trimStart","substring"].reduce((e,t)=>({...e,[t]:r=>(...n)=>(n.length&&n[0].raw&&(n=[F(n[0],n.slice(1))]),o(r[t](...n)))}),{}),y=I(),E=e=>(...t)=>o`${y(e,...t)}`,v=([e,...t])=>`${e.toUpperCase()}${t.join("")}`,f=e=>e.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`).replace(/^-|-$/,""),p=e=>e.split(" ").map(t=>t.replace(/[a-z]/i,r=>v(r))).join(" "),l=e=>e.toLowerCase().trim().split(/[- ]/).map((t,r)=>r&&`${v(t)}`||t).join(""),w=e=>({at:t,html:r=!1,wordBoundary:n=!1}={})=>{if(e.length<=t)return o(e);let i=e.slice(0,t-1),c=r?" &hellip;":" ...";return o((n?i.slice(0,i.lastIndexOf(" ")):i)+c)},g=e=>o(e.replace(/</g,"&lt;")),h=(e,t=!1)=>{let r=L(Object.assign(document.createElement("div"),{innerHTML:e}));return r.innerHTML.trim().length?t?r.innerHTML:o(r.innerHTML):t?`Sanitatition failed (likely unsafe html) for '${w(g(e))({at:40})}'`:o(e)},x=e=>(t,r)=>{if(!t)return o(string);let n=r?.dontSanitize??!0;delete r?.dontSanitize;let i=r&&Object.entries(r).reduce((s,[u,m])=>[...s,`${u}="${m}"`],[]).join(" ")||"",c=`<${t} ${i}>${e}</${t}>`;if(!j||!n)return o(c);let k=L(Object.assign(document.createElement("div"),{innerHTML:c}));if(k.innerHTML.trim().length)return o(k.innerHTML);let a=w(`<${t} ${i}>${e}</${t}>`)({at:40,html:!0});return T?o(g(e)):o`${g(a)} is not valid (see console)`},S=e=>(t,r)=>{if([t,r].filter(i=>Object.getPrototypeOf(i??-1)?.constructor===String).length===2){let i=RegExp(t,"g");return o(e.replace(i,r))}return o(e)},O=e=>({terms:t=[],caseSensitive:r=!1}={})=>{let n=t.constructor===RegExp;t=t&&!n&&!Array.isArray(t)?[t]:t;let i=!n&&!t.find(u=>u.constructor!==String);if(!n&&(!i||!t.length))return{hits:"n/a",result:"please provide valid terms"};let c=n&&`${t.flags??""}`||(r?"i":""),k=RegExp(n?t:t.join("|"),`g${c}`),a=[...e.matchAll(k)],s=a.length;return a=s>0?a.reduce((u,m)=>({...u,[m[0]]:{at:(u[m[0]]?.at||[]).concat(m.index)}}),{}):{},{searched4:n?t.toString():t.join(", "),hits:s,result:a}},C=e=>o(e.replace(/[\n\r]/g,"").replace(/\s{2,}/g," ").replace(/(>\s+<)/g,"><").replace(/>\s+(\w)/g,(t,r)=>`>${r}`).replace(/(\w)\s+</g,(t,r)=>`${r}<`).replace(/ +>/g,">").replace(/^\s+|\s+$/,"")),M=e=>(t,r=0)=>o(`${e.slice(0,(r>0,r))}${t}${e.slice(r)}`),b=e=>({get lower(){return o(e.toLowerCase())},get upper(){return o(e.toUpperCase())},get camel(){return o`${l(e)}`},get wordsFirstUC(){return o`${p(e)}`},get dashed(){return o`${f(e)}`},get firstUC(){return o(v(e))}}),q=e=>({get single(){return o(`'${e}'`)},get double(){return o(`"${e}"`)},get backtick(){return o(`\`${e}\``)}}),P=e=>$`${e}`,A=e=>(t,...r)=>{try{return D(t,...r)}catch(n){return`Error creating Regular Expression from "${t}" (modifiers: ${r.join("").trim()||"none"})
${n.message}`}},d={...W({isProxied:!0,wordsFirstUC:e=>b(e).wordsFirstUC,toCamelCase:e=>b(e).camel,toDashedNotation:e=>b(e).dashed,ucFirst:e=>b(e).firstUC,append:e=>t=>o(`${e}${t}`),lower:e=>b(e).lower,upper:e=>b(e).upper,case:b,quote:q,createRegExp:A,value:P,insert:M,format:E,toTag:x,truncate:w,replaceWords:S,escHTML:g,compressHTML:C,find:O}),...z};d.addFN=()=>(e,t)=>d[e]=r=>(...n)=>o(t(r,...n)),d.addMethod=d.addFN,d.addProp=()=>(e,t)=>d[e]=r=>o(t(r)),d.methods=Object.getOwnPropertyNames(d);let V={get:(e,t)=>{if(d[t]&&!/object|tostring|valueof/i.test(t))return d[t]instanceof Function?d[t](e):d[t];if(e[t])return e[t]instanceof Function?e[t].bind(e):e[t]}};function F(e,...t){return new String(Array.isArray(e)&&t.length?e.reduce((r,n,i)=>r?.concat(`${n}${t[i]??""}`)||r,""):e)}function o(e,...t){if(e instanceof Array&&e[0].trim().startsWith("//[RE]"))return A("")(e,...t);let r=F(e,...t);return r=j&&L&&/<.+?>/gi.test(r)&&!r?.trim()?.startsWith("!!!")?h(r,!0):r.replace(/!!!/,""),new Proxy(new String(r),V)}return o;function W(e){let t=(i,...c)=>o(F(i,...c)),r=()=>(i,...c)=>t(i,...c);return{...{clone:t,cloneTo:r,set:r},...e}}function D(e,...t){let r=t.length&&Array.isArray(t.slice(-1))?t.pop().join(""):"";return new RegExp((t.length&&e.raw.reduce((n,i,c)=>n.concat(t[c-1]||"").concat(i),"")||e.raw.join("")).split(`
`).map(n=>n.replace(/\s|\/\/.*$/g,"").trim().replace(/(@s!)/g," ")).join(""),r)}function I(){let{isStringOrNumber:e,isObject:t,invalidate:r,replacement:n,replacer:i,replace:c}={isStringOrNumber:a=>[String,Number].find(s=>Object.getPrototypeOf(a??"")?.constructor===s),isObject:a=>Object.getPrototypeOf(a??"")?.constructor===Object,invalidate:(a,s)=>a??`{${s}}`,replacement:(a,s,u)=>!e(s[a])||!u&&`${s[a]}`.trim()===""?r(u,a):s[a]??r(u,a),replacer:(a,s)=>(...u)=>n(u.find(m=>m.key).key??"_",a,s),replace:(a,s,u)=>a.replace(/\{(?<key>[a-z_\d]+)}/gim,i(s,u))},k=(a,s=void 0,...u)=>u.flat().reduce((m,H)=>m.concat(t(H)?c(a,H,s):""),"");return(a,...s)=>k(a,void 0,...s)}}export{G as $SFactory,K as $SNoHTML,Q as default};
