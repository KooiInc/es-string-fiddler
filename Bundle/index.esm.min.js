var W=Object.defineProperty;var M=(g,h)=>()=>(g&&(h=g(g=0)),h);var H=(g,h)=>{for(var y in h)W(g,y,{get:h[y],enumerable:!0})};var A={};H(A,{default:()=>_});var _,N=M(()=>{_=JSON.parse('{"html":["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","contenteditable","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","target","title","translate","type","usemap","valign","value","width","xmlns","slot"],"svg":["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"],"tags":{"a":true,"area":true,"audio":false,"br":true,"base":true,"body":true,"button":true,"canvas":true,"dl":true,"data":true,"datalist":true,"div":true,"em":true,"embed":false,"fieldset":true,"font":true,"footer":true,"form":false,"hr":true,"head":true,"header":true,"output":true,"iframe":false,"frameset":false,"img":true,"input":true,"li":true,"label":true,"legend":true,"link":true,"map":true,"mark":true,"menu":true,"media":true,"meta":true,"nav":true,"meter":true,"ol":true,"object":false,"optgroup":true,"option":true,"p":true,"param":true,"picture":true,"pre":true,"progress":false,"quote":true,"script":false,"select":true,"source":true,"span":true,"style":true,"caption":true,"td":true,"col":true,"table":true,"tr":true,"template":false,"textarea":true,"time":true,"title":true,"track":true,"details":true,"ul":true,"video":true,"del":true,"ins":true,"slot":true,"blockquote":true,"svg":true,"dialog":true,"summary":true,"main":true,"address":true,"colgroup":true,"tbody":true,"tfoot":true,"thead":true,"th":true,"dd":true,"dt":true,"figcaption":true,"figure":true,"i":true,"b":true,"code":true,"h1":true,"h2":true,"h3":true,"h4":true,"abbr":true,"bdo":true,"dfn":true,"kbd":true,"q":true,"rb":true,"rp":true,"rt":true,"ruby":true,"s":true,"strike":true,"samp":true,"small":true,"strong":true,"sup":true,"sub":true,"u":true,"var":true,"wbr":true,"nobr":true,"tt":true,"noscript":true}}')});var U={};H(U,{default:()=>G});function J(){let{html:g,svg:h,tags:y}=X,x=(p,c)=>p.find(l=>l===c),w={data:/data-[\-\w.\p{L}]/ui,validURL:/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i,whiteSpace:/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g,notAllowedValues:/javascript|injected|noreferrer|alert|DataURL/gi},S=p=>{let c=p?.nodeName.toLowerCase()||"none";return c==="#text"||!!y[c]};return L;function L(p){let c={rawHTML:p.outerHTML,removed:{}};return p instanceof HTMLElement&&[...p.childNodes].forEach(l=>{if(l?.children?.length&&L(l),l?.attributes){let O=l instanceof SVGElement?h:g;[...(l??{attributes:[]}).attributes].forEach(m=>{let $=m.name.trim().toLowerCase(),E=m.value.trim().toLowerCase().replace(w.whiteSpace,""),b=$==="href"?!w.validURL.test(E):w.notAllowedValues.test(E),z=$.startsWith("data")?!w.data.test($):!x(O,$);if(b||z){let C=m.value||"none";C+=C.length===60?"...":"",c.removed[`${m.name}`]=`attribute/property(-value) not allowed, removed. Value: ${C}`,l.removeAttribute(m.name)}})}if(!S(l)){let m=(l?.outerHTML||l?.textContent).trim()??"EMPTY";m+=m.length===60?"...":"",c.removed[`<${l.nodeName?.toLowerCase()}>`]=`not allowed, not rendered. Value: ${m}`,l.remove()}}),Object.keys(c.removed).length&&Object.entries(c.removed).forEach(([l,j])=>console.error(`${l}: ${j}`)),p}}var X,G,R=M(async()=>{X=(await Promise.resolve().then(()=>(N(),A))).default,G=J()});var q=(await R().then(()=>U)).default,K=Y();function Y(){let g=["concat","padEnd","padStart","repeat","replace","replaceAll","slice","toLocaleLowerCase","toLocaleUpperCase","toLowerCase","toUpperCase","toWellFormed","trim","trimEnd","trimLeft","trimRight","trimStart","substring"].reduce((e,t)=>({...e,[t]:r=>(...n)=>(n.length&&n[0].raw&&(n=[T(n[0],n.slice(1))]),o(r[t](...n)))}),{}),h=I(),y=e=>(...t)=>o`${h(e,...t)}`,x=([e,...t])=>`${e.toUpperCase()}${t.join("")}`,w=e=>e.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`).replace(/^-|-$/,""),S=e=>e.split(" ").map(t=>t.replace(/[a-z]/i,r=>x(r))).join(" "),L=e=>e.toLowerCase().trim().split(/[- ]/).map((t,r)=>r&&`${x(t)}`||t).join(""),p=e=>({at:t,html:r=!1,wordBoundary:n=!1}={})=>{if(e.length<=t)return o(e);let i=e.slice(0,t-1),d=r?" &hellip;":" ...";return o((n?i.slice(0,i.lastIndexOf(" ")):i)+d)},c=e=>o(e.replace(/</g,"&lt;")),l=(e,t=!1)=>{let r=q(Object.assign(document.createElement("div"),{innerHTML:e}));return r.innerHTML.trim().length?t?r.innerHTML:o(r.innerHTML):t?`Sanitatition failed (likely unsafe html) for '${p(c(e))({at:40})}'`:o(e)},j=e=>(t,r)=>{if(!t)return o(string);let n=r&&Object.entries(r).reduce((k,[a,s])=>[...k,`${a}="${s}"`],[]).join(" ")||"",i=q(Object.assign(document.createElement("div"),{innerHTML:`<${t} ${n}>${e}</${t}>`}));if(i.innerHTML.trim().length)return o(i.innerHTML);let d=p(`<${t} ${n}>${e}</${t}>`)({at:40,html:!0});return o`<span style="color:red">${c(d)}</span> <i>is not valid</i> 
    (see console)`},O=e=>(t,r)=>{if([t,r].filter(i=>Object.getPrototypeOf(i??-1)?.constructor===String).length===2){let i=RegExp(t,"g");return o(e.replace(i,r))}return o(e)},m=e=>({terms:t=[],caseSensitive:r=!1}={})=>{let n=t.constructor===RegExp;t=t&&!n&&!Array.isArray(t)?[t]:t;let i=!n&&!t.find(u=>u.constructor!==String);if(!n&&(!i||!t.length))return{hits:"n/a",result:"please provide valid terms"};let d=n&&`${t.flags??""}`||(r?"i":""),k=RegExp(n?t:t.join("|"),`g${d}`),a=[...e.matchAll(k)],s=a.length;return a=s>0?a.reduce((u,v)=>({...u,[v[0]]:{at:(u[v[0]]?.at||[]).concat(v.index)}}),{}):{},{searched4:n?t.toString():t.join(", "),hits:s,result:a}},$=e=>o(e.replace(/[\n\r]/g,"").replace(/\s{2,}/g," ").replace(/(>\s+<)/g,"><").replace(/>\s+(\w)/g,(t,r)=>`>${r}`).replace(/(\w)\s+</g,(t,r)=>`${r}<`).replace(/ +>/g,">").replace(/^\s+|\s+$/,"")),E=e=>(t,r=0)=>o(`${e.slice(0,(r>0,r))}${t}${e.slice(r)}`),b=e=>({get lower(){return o(e.toLowerCase())},get upper(){return o(e.toUpperCase())},get camel(){return o`${L(e)}`},get wordsFirstUC(){return o`${S(e)}`},get dashed(){return o`${w(e)}`},get firstUC(){return o(x(e))}}),f={...V({isProxied:!0,wordsFirstUC:e=>b(e).wordsFirstUC,toCamelCase:e=>b(e).camel,toDashedNotation:e=>b(e).dashed,ucFirst:e=>b(e).firstUC,append:e=>t=>o(`${e}${t}`),lower:e=>b(e).lower,upper:e=>b(e).upper,case:b,quote:e=>({get single(){return o(`'${e}'`)},get double(){return o(`"${e}"`)},get backtick(){return o(`\`${e}\``)}}),createRegExp:e=>(t,...r)=>{try{return D(t,...r)}catch(n){return`Error creating Regular Expression from "${t}" (modifiers: ${r.join("").trim()||"none"})
${n.message}`}},value:e=>e.valueOf(),insert:E,format:y,toTag:j,truncate:p,replaceWords:O,escHTML:c,compressHTML:$,find:m}),...g};f.addFN=()=>(e,t)=>f[e]=r=>(...n)=>o(t(r,...n)),f.addMethod=f.addFN,f.addProp=()=>(e,t)=>f[e]=r=>o(t(r)),f.methods=Object.getOwnPropertyNames(f);let P={get:(e,t)=>{if(f[t]&&!/valueof|tostring|object/i.test(t))return f[t]instanceof Function?f[t](e):f[t];if(e[t])return e[t]instanceof Function?e[t].bind(e):e[t]}};function T(e,...t){return new String(t.length?e.reduce((r,n,i)=>r.concat(`${n}${t[i]??""}`),""):e)}function o(e,...t){let r=T(e,...t),n=r?.startsWith("!!!");return r=n?r.replace(/^!!!/,""):r,r=/<.+?>/gi.test(r)&&!n?l(r,!0):r,new Proxy(new String(r),P)}return o;function V(e){let t=(i,...d)=>o(T(i,...d)),r=()=>(i,...d)=>t(i,...d);return{...{clone:t,cloneTo:r,set:r},...e}}function D(e,...t){let r=t.length&&Array.isArray(t.slice(-1))?t.pop().join(""):"";return new RegExp((t.length&&e.raw.reduce((n,i,d)=>n.concat(t[d-1]||"").concat(i),"")||e.raw.join("")).split(`
`).map(n=>n.replace(/\s|\/\/.*$/g,"").trim().replace(/(@s!)/g," ")).join(""),r)}function I(){let{isStringOrNumber:e,isObject:t,invalidate:r,replacement:n,replacer:i,replace:d}={isStringOrNumber:a=>[String,Number].find(s=>Object.getPrototypeOf(a??"")?.constructor===s),isObject:a=>Object.getPrototypeOf(a??"")?.constructor===Object,invalidate:(a,s)=>a??`{${s}}`,replacement:(a,s,u)=>!e(s[a])||!u&&`${s[a]}`.trim()===""?r(u,a):s[a]??r(u,a),replacer:(a,s)=>(...u)=>n(u.find(v=>v.key).key??"_",a,s),replace:(a,s,u)=>a.replace(/\{(?<key>[a-z_\d]+)}/gim,i(s,u))},k=(a,s=void 0,...u)=>u.flat().reduce((v,F)=>v.concat(t(F)?d(a,F,s):""),"");return(a,...s)=>k(a,void 0,...s)}}export{K as default};
