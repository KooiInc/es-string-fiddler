{
  "version": 3,
  "sources": ["../index.esm.js", "../Resource/htmlInfo.js", "../Resource/SanitizerFactory.js"],
  "sourcesContent": ["import sanitizer from \"./Resource/SanitizerFactory.js\";\r\nexport default XStringFactory();\r\n\r\nfunction XStringFactory() {\r\n  const nativeOverrides = [\r\n    \"concat\", \"padEnd\", \"padStart\", \"repeat\", \"replace\", \"replaceAll\",\r\n    \"slice\", \"toLocaleLowerCase\", \"toLocaleUpperCase\", \"toLowerCase\",\r\n    \"toUpperCase\", \"toWellFormed\", \"trim\", \"trimEnd\", \"trimLeft\",\r\n    \"trimRight\", \"trimStart\", \"substring\", ]\r\n    .reduce( (acc, val) => {\r\n      return {\r\n        ...acc,\r\n        [val]: str => (...args) => {\r\n          // enable method as tagged template (only applicable for concat, actually)\r\n          if (args.length && args[0].raw) {\r\n            args = [resolveTemplateString(args[0], args.slice(1))];\r\n          }\r\n\r\n          return proxify( str[val](...args) )\r\n        }\r\n      };\r\n    }, {} );\r\n  const interpolator = interpolateFactory();\r\n  const format = str => (...tokens) => proxify`${interpolator(str, ...tokens)}`;\r\n  const ucFirst = ([first, ...theRest]) => `${first.toUpperCase()}${theRest.join(``)}`;\r\n  const toDashedNotation = str2Convert =>\r\n    str2Convert.replace(/[A-Z]/g, a => `-${a.toLowerCase()}`).replace(/^-|-$/, ``);\r\n  const wordsFirstUp = str => str.split(` `).map(s => s.replace(/[a-z]/i, a => ucFirst(a))).join(` `);\r\n  const toCamelcase = str2Convert => str2Convert.toLowerCase()\r\n    .trim()\r\n    .split(/[- ]/)\r\n    .map( (str, i) => i && `${ucFirst(str)}` || str )\r\n    .join(``);\r\n  const truncate = str => ( {at, html = false, wordBoundary = false} = {} ) => {\r\n    if (str.length <= at) { return proxify(str); }\r\n    const subString = str.slice(0, at - 1);\r\n    const endwith = html ? \" &hellip;\" : ` ...`;\r\n    return proxify( ( wordBoundary\r\n      ? subString.slice(0, subString.lastIndexOf(\" \"))\r\n      : subString) + endwith );\r\n  };\r\n  const escHTML = str => proxify(str.replace(/</g, `&lt;`));\r\n  const sanitizeHTML = (str, omitProxy = false) => {\r\n    const sane = sanitizer(\r\n      Object.assign(document.createElement(`div`), { innerHTML: str } )\r\n    );\r\n\r\n    if (sane.innerHTML.trim().length) {\r\n      return omitProxy ? sane.innerHTML : proxify(sane.innerHTML);\r\n    }\r\n\r\n    return omitProxy ? `Sanitatition failed (likely unsafe html) for '${truncate(escHTML(str))({at: 40})}'` : proxify(str);\r\n  };\r\n  const toTag = str => (tag, props) => {\r\n    if (!tag) {\r\n      return proxify(string);\r\n    }\r\n    const propsStr = props && Object.entries(props).reduce( (acc, [k, v]) => {\r\n      return [...acc, `${k}=\"${v}\"`];\r\n    }, []).join(` `) || ``;\r\n    const elemTest = sanitizer(\r\n      Object.assign(document.createElement(`div`),\r\n        { innerHTML: `<${tag} ${propsStr}>${str}</${tag}>` } )\r\n    );\r\n\r\n    if (elemTest.innerHTML.trim().length) {\r\n      return proxify(elemTest.innerHTML);\r\n    }\r\n\r\n    const invalidTag = truncate(`<${tag} ${propsStr}>${str}</${tag}>`)({at: 40, html: true});\r\n\r\n    return proxify`<span style=\"color:red\">${escHTML(invalidTag)}</span> <i>is not valid</i> \r\n    (see console)`;\r\n  };\r\n  const replaceWords = str => (initial, replacement) => {\r\n    const cando = [initial, replacement].filter( v =>\r\n      Object.getPrototypeOf( v ?? -1)?.constructor === String).length === 2;\r\n\r\n    if (cando) {\r\n      const re = RegExp(initial, `g`);\r\n      return proxify(str.replace(re, replacement));\r\n    }\r\n\r\n    return proxify(str);\r\n  };\r\n  const find = str => ({terms = [], caseSensitive = false} = {}) => {\r\n    const termsIsRE = terms.constructor === RegExp;\r\n    terms = terms && !termsIsRE && !Array.isArray(terms) ? [terms] : terms;\r\n    const termsOk = !termsIsRE && !terms.find(t => t.constructor !== String);\r\n\r\n    if (!termsIsRE && (!termsOk || !terms.length)) {\r\n      return {hits: `n/a`, result: `please provide valid terms`};\r\n    }\r\n\r\n    const xCase = termsIsRE && `${terms.flags ?? ``}` || (!caseSensitive ? `` : `i`);\r\n    const re = RegExp(termsIsRE ? terms : terms.join(`|`), `g${xCase}`);\r\n    let result = [...str.matchAll(re)];\r\n    const hits = result.length;\r\n\r\n    result = hits > 0\r\n      ? result.reduce( (acc, v) =>\r\n        ({...acc, ...{ [v[0]]: { at: ( acc[v[0]]?.at || []).concat(v.index) } } } ),{})\r\n      : {};\r\n\r\n    return { searched4: termsIsRE ? terms.toString() : terms.join(`, `), hits, result };\r\n  };\r\n  const compressHTML = str =>\r\n    proxify(str.replace(/[\\n\\r]/g, ``)\r\n      .replace(/\\s{2,}/g, ` `)\r\n      .replace(/(>\\s+<)/g, `><`)\r\n      .replace(/>\\s+(\\w)/g, (_, b) => `>${b}`)\r\n      .replace(/(\\w)\\s+</g, (_, b) => `${b}<`)\r\n      .replace(/ +>/g, `>`)\r\n      .replace(/^\\s+|\\s+$/, ``));\r\n  const insert = str => (str2Insert, at = 0) => {\r\n    return proxify(`${str.slice(0, at > 0 ? at : at)}${str2Insert}${str.slice(at)}`);\r\n  };\r\n  const casingFactory = str => ({\r\n    get lower() { return proxify(str.toLowerCase()); },\r\n    get upper() { return proxify(str.toUpperCase()); },\r\n    get camel() { return proxify`${toCamelcase(str)}`; },\r\n    get wordsFirstUC() { return proxify`${wordsFirstUp(str)}`; },\r\n    get dashed() { return proxify`${toDashedNotation(str)}`; },\r\n    get firstUC() { return proxify(ucFirst(str)); },\r\n  });\r\n  const quoteFactory = str => ({\r\n    get single() { return proxify(`'${str}'`)},\r\n    get double() { return proxify(`\"${str}\"`)},\r\n    get backtick() { return proxify(`\\`${str}\\``)},\r\n  });\r\n  const value = str => str.valueOf();\r\n  const createRegExp = str => (str, ...args) => {\r\n    try {\r\n      return regExp(str, ...args);\r\n    } catch (err) {\r\n      return `Error creating Regular Expression from \"${str}\" (modifiers: ${\r\n        args.join(``).trim() || `none`})\\n${err.message}`;\r\n    }\r\n  }\r\n\r\n  const proxiedGetters = {\r\n    ...addDefaults({\r\n      isProxied: true,\r\n      wordsFirstUC: str => casingFactory(str).wordsFirstUC,\r\n      toCamelCase: str => casingFactory(str).camel,\r\n      toDashedNotation: str => casingFactory(str).dashed,\r\n      ucFirst: str => casingFactory(str).firstUC,\r\n      append: str => str2Append => proxify(`${str}${str2Append}`),\r\n      lower: str => casingFactory(str).lower,\r\n      upper: str => casingFactory(str).upper,\r\n      case: casingFactory,\r\n      quote: quoteFactory,\r\n      createRegExp,\r\n      value,\r\n      insert,\r\n      format,\r\n      toTag,\r\n      truncate,\r\n      replaceWords,\r\n      escHTML,\r\n      compressHTML,\r\n      find,\r\n    }),\r\n    ...nativeOverrides\r\n  };\r\n\r\n  proxiedGetters.addFN = () => (name, fn) =>\r\n    proxiedGetters[name] = str => (...args) => proxify(fn(str, ...args));\r\n\r\n  proxiedGetters.addMethod = proxiedGetters.addFN;\r\n\r\n  proxiedGetters.addProp = () => (name, fn) =>\r\n    proxiedGetters[name] = str => proxify(fn(str));\r\n\r\n  proxiedGetters.methods = Object.getOwnPropertyNames(proxiedGetters);\r\n\r\n  const proxy = {\r\n    get: ( target, key ) => {\r\n      // native String methods overrides and extension methods\r\n      // Note: 'object' test is when a key is a symbol (not likely, but possible)\r\n      if (proxiedGetters[key] && !/valueof|tostring|object/i.test(key)) {\r\n        return proxiedGetters[key] instanceof Function ? proxiedGetters[key](target) : proxiedGetters[key];\r\n      }\r\n\r\n      // native string methods that don't return a string\r\n      // Note: not chainable\r\n      if (target[key]) {\r\n        return target[key] instanceof Function ? target[key].bind(target) : target[key];\r\n      }\r\n    },\r\n  };\r\n\r\n  function resolveTemplateString(str, ...args) {\r\n    return new String(args.length\r\n      ? str.reduce( (acc, v, i) => acc.concat(`${v}${args[i] ?? ``}`), ``)\r\n      : str);\r\n  }\r\n\r\n  // Can be used either as tagged template function or a regular function receiving a string\r\n  // So, best of both worlds ...\r\n  function proxify(someStr, ...args) {\r\n    if (someStr instanceof Array && someStr[0].trim().startsWith(`//[RE]`)) {\r\n       return createRegExp(``)(someStr, ...args);\r\n    }\r\n\r\n    let str = resolveTemplateString(someStr, ...args);\r\n    const shouldSanitize = /<.+?>/gi.test(str) && !str?.trim()?.startsWith(`!!!`);\r\n    str = shouldSanitize ? sanitizeHTML(str, true) : str.replace(/!!!/, ``);\r\n\r\n    return new Proxy(new String(str), proxy);\r\n  }\r\n\r\n  return proxify;\r\n\r\n  function addDefaults(extensions) {\r\n    const clone = (str, ...args) => proxify(resolveTemplateString(str, ...args));\r\n    const cloneTo = () => (nwValue, ...args) => clone(nwValue, ...args);\r\n    const defaultXs = {\r\n      clone,\r\n      cloneTo,\r\n      set: cloneTo,\r\n    };\r\n    return {...defaultXs, ...extensions};\r\n  }\r\n\r\n  function regExp(regexStr, ...args) {\r\n    const flags = args.length && Array.isArray(args.slice(-1)) ? args.pop().join(``) : ``;\r\n\r\n    return new RegExp(\r\n      (args.length &&\r\n        regexStr.raw.reduce( (a, v, i ) => a.concat(args[i-1] || ``).concat(v), ``) ||\r\n        regexStr.raw.join(``))\r\n        .split(`\\n`)\r\n        .map( line => line.replace(/\\s|\\/\\/.*$/g, ``).trim().replace(/(@s!)/g, ` `) )\r\n        .join(``), flags);\r\n  }\r\n\r\n  function interpolateFactory() {\r\n    const {isStringOrNumber, isObject, invalidate, replacement, replacer, replace} = {\r\n      isStringOrNumber: v => [String, Number].find(type => Object.getPrototypeOf( v ?? ``)?.constructor === type),\r\n      isObject: v => Object.getPrototypeOf( v ?? ``)?.constructor === Object,\r\n      invalidate: (defaultReplacer, key) => defaultReplacer ?? `{${key}}`,\r\n      replacement: (key, t, defaultReplacer) =>\r\n        !isStringOrNumber(t[key]) || (!defaultReplacer && `${t[key]}`.trim() === ``)\r\n          ? invalidate(defaultReplacer, key) : t[key] ?? invalidate(defaultReplacer, key),\r\n      replacer: (token, defaultReplacer) => (...args) =>\r\n        replacement( args.find(a => a.key).key ?? `_`, token, defaultReplacer ),\r\n      replace: (str, token, defaultReplacer) =>\r\n        str.replace( /\\{(?<key>[a-z_\\d]+)}/gim, replacer(token, defaultReplacer) ),\r\n    };\r\n    const interpolate = (str, defaultReplacer = undefined, ...tokens) => tokens.flat()\r\n      .reduce( (acc, token) => acc.concat(!isObject(token) ? `` : replace(str, token, defaultReplacer )), ``);\r\n\r\n    return (str, ...tokens) => interpolate(...[str,undefined,...tokens])\r\n  }\r\n}", "export default\r\nJSON.parse(`{\"html\":[\"accept\",\"action\",\"align\",\"alt\",\"autocapitalize\",\"autocomplete\",\"autopictureinpicture\",\"autoplay\",\"background\",\"bgcolor\",\"border\",\"capture\",\"cellpadding\",\"cellspacing\",\"checked\",\"cite\",\"class\",\"clear\",\"contenteditable\",\"color\",\"cols\",\"colspan\",\"controls\",\"controlslist\",\"coords\",\"crossorigin\",\"datetime\",\"decoding\",\"default\",\"dir\",\"disabled\",\"disablepictureinpicture\",\"disableremoteplayback\",\"download\",\"draggable\",\"enctype\",\"enterkeyhint\",\"face\",\"for\",\"headers\",\"height\",\"hidden\",\"high\",\"href\",\"hreflang\",\"id\",\"inputmode\",\"integrity\",\"ismap\",\"kind\",\"label\",\"lang\",\"list\",\"loading\",\"loop\",\"low\",\"max\",\"maxlength\",\"media\",\"method\",\"min\",\"minlength\",\"multiple\",\"muted\",\"name\",\"nonce\",\"noshade\",\"novalidate\",\"nowrap\",\"open\",\"optimum\",\"pattern\",\"placeholder\",\"playsinline\",\"poster\",\"preload\",\"pubdate\",\"radiogroup\",\"readonly\",\"rel\",\"required\",\"rev\",\"reversed\",\"role\",\"rows\",\"rowspan\",\"spellcheck\",\"scope\",\"selected\",\"shape\",\"size\",\"sizes\",\"span\",\"srclang\",\"start\",\"src\",\"srcset\",\"step\",\"style\",\"summary\",\"tabindex\",\"target\",\"title\",\"translate\",\"type\",\"usemap\",\"valign\",\"value\",\"width\",\"xmlns\",\"slot\"],\"svg\":[\"accent-height\",\"accumulate\",\"additive\",\"alignment-baseline\",\"ascent\",\"attributename\",\"attributetype\",\"azimuth\",\"basefrequency\",\"baseline-shift\",\"begin\",\"bias\",\"by\",\"class\",\"clip\",\"clippathunits\",\"clip-path\",\"clip-rule\",\"color\",\"color-interpolation\",\"color-interpolation-filters\",\"color-profile\",\"color-rendering\",\"cx\",\"cy\",\"d\",\"dx\",\"dy\",\"diffuseconstant\",\"direction\",\"display\",\"divisor\",\"dur\",\"edgemode\",\"elevation\",\"end\",\"fill\",\"fill-opacity\",\"fill-rule\",\"filter\",\"filterunits\",\"flood-color\",\"flood-opacity\",\"font-family\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-variant\",\"font-weight\",\"fx\",\"fy\",\"g1\",\"g2\",\"glyph-name\",\"glyphref\",\"gradientunits\",\"gradienttransform\",\"height\",\"href\",\"id\",\"image-rendering\",\"in\",\"in2\",\"k\",\"k1\",\"k2\",\"k3\",\"k4\",\"kerning\",\"keypoints\",\"keysplines\",\"keytimes\",\"lang\",\"lengthadjust\",\"letter-spacing\",\"kernelmatrix\",\"kernelunitlength\",\"lighting-color\",\"local\",\"marker-end\",\"marker-mid\",\"marker-start\",\"markerheight\",\"markerunits\",\"markerwidth\",\"maskcontentunits\",\"maskunits\",\"max\",\"mask\",\"media\",\"method\",\"mode\",\"min\",\"name\",\"numoctaves\",\"offset\",\"operator\",\"opacity\",\"order\",\"orient\",\"orientation\",\"origin\",\"overflow\",\"paint-order\",\"path\",\"pathlength\",\"patterncontentunits\",\"patterntransform\",\"patternunits\",\"points\",\"preservealpha\",\"preserveaspectratio\",\"primitiveunits\",\"r\",\"rx\",\"ry\",\"radius\",\"refx\",\"refy\",\"repeatcount\",\"repeatdur\",\"restart\",\"result\",\"rotate\",\"scale\",\"seed\",\"shape-rendering\",\"specularconstant\",\"specularexponent\",\"spreadmethod\",\"startoffset\",\"stddeviation\",\"stitchtiles\",\"stop-color\",\"stop-opacity\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke\",\"stroke-width\",\"style\",\"surfacescale\",\"systemlanguage\",\"tabindex\",\"targetx\",\"targety\",\"transform\",\"text-anchor\",\"text-decoration\",\"text-rendering\",\"textlength\",\"type\",\"u1\",\"u2\",\"unicode\",\"values\",\"viewbox\",\"visibility\",\"version\",\"vert-adv-y\",\"vert-origin-x\",\"vert-origin-y\",\"width\",\"word-spacing\",\"wrap\",\"writing-mode\",\"xchannelselector\",\"ychannelselector\",\"x\",\"x1\",\"x2\",\"xmlns\",\"y\",\"y1\",\"y2\",\"z\",\"zoomandpan\"],\"tags\":{\"a\":true,\"area\":true,\"audio\":false,\"br\":true,\"base\":true,\"body\":true,\"button\":true,\"canvas\":true,\"dl\":true,\"data\":true,\"datalist\":true,\"div\":true,\"em\":true,\"embed\":false,\"fieldset\":true,\"font\":true,\"footer\":true,\"form\":false,\"hr\":true,\"head\":true,\"header\":true,\"output\":true,\"iframe\":false,\"frameset\":false,\"img\":true,\"input\":true,\"li\":true,\"label\":true,\"legend\":true,\"link\":true,\"map\":true,\"mark\":true,\"menu\":true,\"media\":true,\"meta\":true,\"nav\":true,\"meter\":true,\"ol\":true,\"object\":false,\"optgroup\":true,\"option\":true,\"p\":true,\"param\":true,\"picture\":true,\"pre\":true,\"progress\":false,\"quote\":true,\"script\":false,\"select\":true,\"source\":true,\"span\":true,\"style\":true,\"caption\":true,\"td\":true,\"col\":true,\"table\":true,\"tr\":true,\"template\":false,\"textarea\":true,\"time\":true,\"title\":true,\"track\":true,\"details\":true,\"ul\":true,\"video\":true,\"del\":true,\"ins\":true,\"slot\":true,\"blockquote\":true,\"svg\":true,\"dialog\":true,\"summary\":true,\"main\":true,\"address\":true,\"colgroup\":true,\"tbody\":true,\"tfoot\":true,\"thead\":true,\"th\":true,\"dd\":true,\"dt\":true,\"figcaption\":true,\"figure\":true,\"i\":true,\"b\":true,\"code\":true,\"h1\":true,\"h2\":true,\"h3\":true,\"h4\":true,\"abbr\":true,\"bdo\":true,\"dfn\":true,\"kbd\":true,\"q\":true,\"rb\":true,\"rp\":true,\"rt\":true,\"ruby\":true,\"s\":true,\"strike\":true,\"samp\":true,\"small\":true,\"strong\":true,\"sup\":true,\"sub\":true,\"u\":true,\"var\":true,\"wbr\":true,\"nobr\":true,\"tt\":true,\"noscript\":true}}`);", "import tagsInfo from \"./htmlInfo.js\";\r\nexport default sanitizeHTMLFactory();\r\n\r\nfunction sanitizeHTMLFactory() {\r\n  const {html, svg, tags} = tagsInfo;\r\n  const findAttr = (store, name) => store.find(a => a === name)\r\n  const attrRegExpStore = {\r\n    data: /data-[\\-\\w.\\p{L}]/ui, // data-* minimal 1 character after dash\r\n    validURL: /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i,\r\n    whiteSpace: /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g,\r\n    notAllowedValues: /javascript|injected|noreferrer|alert|DataURL/gi\r\n  };\r\n  const isAllowed = elem => {\r\n    const nodeName = elem?.nodeName.toLowerCase() || `none`;\r\n    return nodeName.startsWith(`#`) || !!tags[nodeName];\r\n  };\r\n\r\n  return sanitize;\r\n\r\n  function sanitize(el2Clean) {\r\n    const elCreationInfo = {\r\n      rawHTML: el2Clean.outerHTML,\r\n      removed: {},\r\n    };\r\n\r\n    if (el2Clean instanceof HTMLElement) {\r\n      [...el2Clean.childNodes].forEach(child => {\r\n        if (child?.children?.length) {\r\n          sanitize(child);\r\n        }\r\n\r\n        if (child?.attributes) {\r\n          const attrStore = child instanceof SVGElement ? svg : html;\r\n\r\n          [...(child ?? {attributes: []}).attributes]\r\n            .forEach(attr => {\r\n              const name = attr.name.trim().toLowerCase();\r\n              const value = attr.value.trim().toLowerCase().replace(attrRegExpStore.whiteSpace, ``);\r\n              const evilValue = name === \"href\"\r\n                ? !attrRegExpStore.validURL.test(value) : attrRegExpStore.notAllowedValues.test(value);\r\n              const evilAttrib = name.startsWith(`data`) ? !attrRegExpStore.data.test(name) : !findAttr(attrStore, name);\r\n\r\n              if (evilValue || evilAttrib) {\r\n                let val = attr.value || `none`;\r\n                elCreationInfo.removed[`${attr.name}`] = `attribute/property(-value) not allowed, removed. Value: ${\r\n                  val}`;\r\n                child.removeAttribute(attr.name);\r\n              }\r\n            });\r\n        }\r\n        const allowed = isAllowed(child);\r\n\r\n        if (!allowed) {\r\n          let tagValue = (child?.outerHTML || child?.textContent).trim() || `EMPTY`;\r\n          elCreationInfo.removed[`<${child.nodeName?.toLowerCase()}>`] = `not allowed, not rendered. Value: ${\r\n            tagValue}`;\r\n          child.remove();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (Object.keys(elCreationInfo.removed).length) {\r\n      Object.entries(elCreationInfo.removed).forEach(([k, v]) => console.info(`\u2718 ${k}: ${v}`));\r\n    }\r\n\r\n    return el2Clean;\r\n  }\r\n}"],
  "mappings": "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",
  "names": ["index_esm_exports", "__export", "index_esm_default", "htmlInfo_default", "SanitizerFactory_default", "sanitizeHTMLFactory", "html", "svg", "tags", "htmlInfo_default", "findAttr", "store", "name", "a", "attrRegExpStore", "isAllowed", "elem", "nodeName", "sanitize", "el2Clean", "elCreationInfo", "child", "attrStore", "attr", "value", "evilValue", "evilAttrib", "val", "tagValue", "k", "v", "index_esm_default", "XStringFactory", "nativeOverrides", "acc", "val", "str", "args", "resolveTemplateString", "proxify", "interpolator", "interpolateFactory", "format", "tokens", "ucFirst", "first", "theRest", "toDashedNotation", "str2Convert", "a", "wordsFirstUp", "s", "toCamelcase", "i", "truncate", "at", "html", "wordBoundary", "subString", "endwith", "escHTML", "sanitizeHTML", "omitProxy", "sane", "SanitizerFactory_default", "toTag", "tag", "props", "propsStr", "k", "v", "elemTest", "invalidTag", "replaceWords", "initial", "replacement", "re", "find", "terms", "caseSensitive", "termsIsRE", "termsOk", "t", "xCase", "result", "hits", "compressHTML", "_", "b", "insert", "str2Insert", "casingFactory", "quoteFactory", "value", "createRegExp", "regExp", "err", "proxiedGetters", "addDefaults", "str2Append", "name", "fn", "proxy", "target", "key", "someStr", "extensions", "clone", "cloneTo", "nwValue", "regexStr", "flags", "line", "isStringOrNumber", "isObject", "invalidate", "replacer", "replace", "type", "defaultReplacer", "token", "interpolate"]
}
