exports.$S=P();function P(){let C=["concat","padEnd","padStart","repeat","replace","replaceAll","slice","toLocaleLowerCase","toLocaleUpperCase","toLowerCase","toUpperCase","toWellFormed","trim","trimEnd","trimLeft","trimRight","trimStart","substring"].reduce((e,t)=>({...e,[t]:r=>(...n)=>(n.length&&n[0].raw&&(n=[$(n[0],n.slice(1))]),c(r[t](...n)))}),{}),j=A(),O=e=>(...t)=>c`${j(e,...t)}`,f=([e,...t])=>`${e.toUpperCase()}${t.join("")}`,b=e=>e.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`).replace(/^-|-$/,""),F=e=>e.split(" ").map(t=>t.replace(/[a-z]/i,r=>f(r))).join(" "),x=e=>e.toLowerCase().trim().split(/[- ]/).map((t,r)=>r&&`${f(t)}`||t).join(""),h=e=>({at:t,html:r=!1,wordBoundary:n=!1}={})=>{if(e.length<=t)return c(e);let i=e.slice(0,t-1),l=r?" &hellip;":" ...";return c((n?i.slice(0,i.lastIndexOf(" ")):i)+l)},m=e=>c(e.replace(/</g,"&lt;")),S=e=>(t,r)=>{let n=r&&Object.entries(r).reduce((g,[o,s])=>[...g,`${o}="${s}"`],[]).join(" ")||"",i=sanitizer(Object.assign(document.createElement("div"),{innerHTML:`<${t} ${n}>${e}</${t}>`}));if(i.firstChild)return c(i.firstChild.outerHTML);let l=h(`<${t} ${n}>${e}</${t}>`)({at:40,html:!0});return c`<span style="color:red">${m(l)}</span> <i>is not valid</i> 
    (see console)`},L=e=>(t,r)=>{if([t,r].filter(i=>Object.getPrototypeOf(i??-1)?.constructor===String).length===2){let i=RegExp(t,"g");return c(e.replace(i,r))}return c(e)},v=e=>({terms:t=[],caseSensitive:r=!1}={})=>{let n=t.constructor===RegExp;t=t&&!n&&!Array.isArray(t)?[t]:t;let i=!n&&!t.find(a=>a.constructor!==String);if(!n&&(!i||!t.length))return{hits:"n/a",result:"please provide valid terms"};let l=n&&`${t.flags??""}`||(r?"i":""),g=RegExp(n?t:t.join("|"),`g${l}`),o=[...e.matchAll(g)],s=o.length;return o=s>0?o.reduce((a,d)=>({...a,[d[0]]:{at:(a[d[0]]?.at||[]).concat(d.index)}}),{}):{},{searched4:n?t.toString():t.join(", "),hits:s,result:o}},E=e=>c(e.replace(/[\n\r]/g,"").replace(/\s{2,}/g," ").replace(/(>\s+<)/g,"><").replace(/>\s+(\w)/g,(t,r)=>`>${r}`).replace(/(\w)\s+</g,(t,r)=>`${r}<`).replace(/ +>/g,">").replace(/^\s+|\s+$/,"")),U=e=>(t,r=0)=>c(`${e.slice(0,(r>0,r))}${t}${e.slice(r)}`),p=e=>({get lower(){return c(e.toLowerCase())},get upper(){return c(e.toUpperCase())},get camel(){return c`${x(e)}`},get wordsFirstUC(){return c`${F(e)}`},get dashed(){return c`${b(e)}`},get firstUC(){return c(f(e))}}),u={...T({isProxied:!0,wordsFirstUC:e=>p(e).wordsFirstUC,toCamelCase:e=>p(e).camel,toDashedNotation:e=>p(e).dashed,ucFirst:e=>p(e).firstUC,append:e=>t=>c(`${e}${t}`),lower:e=>p(e).lower,upper:e=>p(e).upper,createRegExp:e=>(t,...r)=>{try{return N(t,...r)}catch(n){return`Can't do this: ${n.message}`}},case:p,quote:e=>({get single(){return c(`'${e}'`)},get double(){return c(`"${e}"`)},get backtick(){return c(`\`${e}\``)}}),value:e=>e.valueOf(),insert:U,format:O,toTag:S,truncate:h,replaceWords:L,escHTML:m,compressHTML:E,find:v}),...C};u.addFN=()=>(e,t)=>u[e]=r=>(...n)=>c(t(r,...n)),u.addMethod=u.addFN,u.addProp=()=>(e,t)=>u[e]=r=>c(t(r)),u.methods=Object.getOwnPropertyNames(u);let y={get:(e,t)=>{if(u[t]&&!/valueof|tostring|object/i.test(t))return u[t]instanceof Function?u[t](e):u[t];if(e[t])return e[t]instanceof Function?e[t].bind(e):e[t]}};function $(e,...t){return new String(t.length?e.reduce((r,n,i)=>r.concat(`${n}${t[i]??""}`),""):e)}function c(e,...t){let r=$(e,...t);return new Proxy(r,y)}return c;function T(e){let t=(i,...l)=>c($(i,...l)),r=()=>(i,...l)=>t(i,...l);return{...{clone:t,cloneTo:r,set:r},...e}}function N(e,...t){let r=t.length&&Array.isArray(t.slice(-1))?t.pop().join(""):"";return new RegExp((t.length&&e.raw.reduce((n,i,l)=>n.concat(t[l-1]||"").concat(i),"")||e.raw.join("")).split(`
`).map(n=>n.replace(/\s|\/\/.*$/g,"").trim().replace(/(@s!)/g," ")).join(""),r)}function A(){let{isStringOrNumber:e,isObject:t,invalidate:r,replacement:n,replacer:i,replace:l}={isStringOrNumber:o=>[String,Number].find(s=>Object.getPrototypeOf(o??"")?.constructor===s),isObject:o=>Object.getPrototypeOf(o??"")?.constructor===Object,invalidate:(o,s)=>o??`{${s}}`,replacement:(o,s,a)=>!e(s[o])||!a&&`${s[o]}`.trim()===""?r(a,o):s[o]??r(a,o),replacer:(o,s)=>(...a)=>n(a.find(d=>d.key).key??"_",o,s),replace:(o,s,a)=>o.replace(/\{(?<key>[a-z_\d]+)}/gim,i(s,a))},g=(o,s=void 0,...a)=>a.flat().reduce((d,w)=>d.concat(t(w)?l(o,w,s):""),"");return(o,...s)=>g(o,void 0,...s)}}
